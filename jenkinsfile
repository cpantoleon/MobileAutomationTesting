pipeline {
    agent any
    environment {
        EMULATOR_DEVICE = "Samsung Galaxy S10"
        APK_PATH = "C:/apk-files/Android.apk"  // Use a simple path
        WORKSPACE_PATH = "C:/Jenkins/workspace/mobile_test/MobileAutomationTesting"  // Update the path to match your directory structure
    }
    stages {
        stage('Checkout Maven Project') {
            steps {
                git url: 'https://github.com/cpantoleon/MobileAutomationTesting.git', branch: 'main'
            }
        }
        
stage('Debug: List Cloned Files') {
    steps {
        script {
            echo "Listing files in the MobileAutomationTesting directory..."
            bat 'dir "C:/Jenkins/workspace/mobile_test/MobileAutomationTesting"'
        }
    }
}



        stage('Start Fresh Docker Container') {
            steps {
                script {
                    echo "Removing any existing container..."
                    bat 'docker rm -f android-container || echo No container to remove'

                    echo "Starting a new container..."
                    bat """
                        docker run -d -p 6080:6080 -p 4723:4723 -e EMULATOR_DEVICE="${EMULATOR_DEVICE}" -e WEB_VNC=true --device /dev/kvm -v C:/apk-files:/apk-files -v C:/Jenkins/workspace/mobile_test/MobileAutomationTesting:/tests --name android-container budtmo/docker-android
                    """
                }
            }
        }

        stage('Wait for Emulator to Start') {
            steps {
                script {
                    echo "Waiting for emulator to start..."
                    bat 'ping -n 120 127.0.0.1 >nul'
                }
            }
        }

        stage('Install APK via ADB Inside Container') {
            steps {
                script {
                    echo "Installing APK..."
                    bat 'docker exec android-container adb install /apk-files/Android.apk'
                }
            }
        }

        stage('Setup & Start Appium') {
            steps {
                script {
                    echo "Starting Appium server..."
                    bat 'docker exec -d android-container appium --address 0.0.0.0 --port 4723'
                }
            }
        }

        stage('Run Maven Tests with Profile') {
            steps {
                script {
                    echo "Installing Maven and Java (JDK 17) in the container..."
                    bat """
                        docker exec -u 0 android-container bash -c "apt-get update && apt-get install -y maven openjdk-17-jdk"
                    """
                    echo "Running Maven tests..."
                    bat 'docker exec android-container bash -c "cd /tests && mvn clean test -Dtest=project.test.swag.runners.testRunner -Dandroid.maven.plugin.skip=true"'
                }
            }
        }
    }

    post {
        always {
            script {
                echo "Stopping Appium server..."
                try {
                    bat 'docker exec android-container pkill -f appium || echo No Appium server running'
                } catch (Exception e) {
                    echo "Appium server not found. Continuing cleanup."
                }

                echo "Cleaning up Docker container..."
                bat 'docker rm -f android-container || echo No container to remove'
            }
        }
    }
}
